// new module script
#define NBONES 3
Character * ar_bone[NBONES];

void game_start(){
  ar_bone[0] = cBone1;
  ar_bone[1] = cBone2;
  ar_bone[2] = cBone3;
}

void ForceTrashBones(){
  int i=0;
  while(i<NBONES){
    ar_bone[i].ChangeRoom(TRASH);    
    i++;
  }  
}

Character * SpawnBone(int x, int y){
  int i=0;
  while(i<NBONES){
    if(ar_bone[i].Room == TRASH){
      ar_bone[i].ChangeRoom(player.Room, x, y);    
      ar_bone[i].Animate(0, 3, eRepeat, eNoBlock, eForwards);
      ar_bone[i].PlaceOnWalkableArea();
      int walkx = ar_bone[i].x;
      int walky = ar_bone[i].y;
      ar_bone[i].x = x;
      ar_bone[i].y = y;
      ar_bone[i].TweenPosition(0.7, walkx, walky, eEaseInExpoTween, eNoBlockTween);
      
      return ar_bone[i];
    }   
    i++;
  }   
  
  return null;
}

void TrashBone(Character * aBoneToTrash){
  aBoneToTrash.ChangeRoom(TRASH);  
}

Character * whichBoneCollidesDog(){
  int i=0;
  while(i<NBONES){
    if(ar_bone[i].IsCollidingWithChar(cDog)) {
      return  ar_bone[i]; 
    }
    i++;
  }  
  return null;
}


void on_event (EventType event, int data){
  if(event == eEventLeaveRoom || event == eEventEnterRoomBeforeFadein){
    ForceTrashBones(); 
  }
}